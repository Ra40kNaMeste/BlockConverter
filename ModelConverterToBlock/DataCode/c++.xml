<?xml version="1.0" encoding="utf-8" ?>
<Dates>
  <Data Name="Context">
    <BlockText Name="InputToWord" EndWord=";" IsIncludeNextWord="false" Links="#(InputParams)" InizLevel="2"/>
    <ArrayParams Name="InputParams" Links="#(InOutProperty)" Separator="&gt;&gt;" InizLevel="1"/>

    <BlockText Name="OutputToWord" IsIncludeNextWord="false" EndWord=";" Links="#(OutputParams)" InizLevel="2"/>
    <ArrayParams Name="OutputParams" Links="#(InOutProperty)" Separator="&lt;&lt;" InizLevel="1"/>

    <Body Name="FuncInput" Start="(" End=")" Links="#(FuncBody)" InizLevel="2"/>
    <ArrayParams Name="FuncInputParams" Links="#(!w)#(Type)#(!w)#(Name)#(*s)" Separator="," InizLevel="1"/>
    <Optional Name="FuncBody" IsOnlyOne="false" InizLevel="1">
      <Chaines>
        <Chain Template="#(FuncInputParams)">
          <Properties>
            <Property Name="Output" Value="#(FuncInputParams)"/>
          </Properties>
        </Chain>
      </Chaines>
      <Properties>
        <Property Name="Output"/>
      </Properties>
    </Optional>
    
    <Body Name="SwitchCases" Start="{" End="}" Links="#(InputSwitchParams)" InizLevel="3"/>
    <ArrayParams Name="InputSwitchParams" Links="#(!w)#(SwitchItem)" Separator="" InizLevel="2"/>
    <StretchProperty Name="InOutProperty"/>
    <ByPattern Name="Name" Pattern="(\w|[.]|->)*"/>
    <ByPattern Name="Prop" Pattern="(\w|[.]|->)*"/>
    <Property Name="Type"/>
    <Body Name="Condition" Start="(" End=")"/>
    <Body Name="CycleBody" Start="{" End="}"/>
    <BlockText Name="MethodOutputBody" IsIncludeNextWord="false" EndWord="="/>
    <BlockText Name="BlockTextBody" IsIncludeNextWord="true" EndWord=";"/>
    <BlockText Name="BlockTextOperation" IsIncludeNextWord="false" EndWord=";"/>

    <BlockText Name="IfTrueBlockText" Links="#(*s)#(InOutProperty)" IsIncludeNextWord="false" EndWord=":" inizLevel="1"/>

    <BlockText Name="SwitchBody" IsIncludeNextWord="false" EndWord="break;"/>
    <Optional Name="NoBody" IsOnlyOne="false" InizLevel="1">
      <Chaines>
        <Chain Template="else#(*s)#(CycleBody)">
          <Properties>
            <Property Name="Output" Value="#(CycleBody)"/>
          </Properties>
        </Chain>
        <Chain Template="else#(*s)#(BlockTextBody)">
          <Properties>
            <Property Name="Output" Value="#(BlockTextBody)"/>
          </Properties>
        </Chain>
      </Chaines>
      <Properties>
        <Property Name="Output"/>
      </Properties>
    </Optional>
    <Optional Name="YesBody" IsOnlyOne="true" InizLevel="1">
      <Chaines>
        <Chain Template="#(CycleBody)">
          <Properties>
            <Property Name="Output" Value="#(CycleBody)"/>
          </Properties>
        </Chain>
        <Chain Template="#(BlockTextBody)">
          <Properties>
            <Property Name="Output" Value="#(BlockTextBody)"/>
          </Properties>
        </Chain>
      </Chaines>
      <Properties>
        <Property Name="Output"/>
      </Properties>
    </Optional>
    <Optional Name="SwitchItem" IsOnlyOne="true" InizLevel="1">
      <Chaines>
        <Chain Template="#(*s)case#(*s)#(Name)#(*s):#(SwitchBody)">
          <Properties>
            <Property Name="Key" Value="#(Name)"/>
            <Property Name="Value" Value="#(SwitchBody)"/>
          </Properties>
        </Chain>
        <Chain Template="#(*s)default#(*s):#(SwitchBody)">
          <Properties>
            <Property Name="Key" Value=" "/>
            <Property Name="Value" Value="#(SwitchBody)"/>
          </Properties>
        </Chain>
      </Chaines>
      <Properties>
        <Property Name="Key"/>
        <Property Name="Value"/>
      </Properties>
    </Optional>
    <Optional Name="SwitchItems" IsOnlyOne="true" InizLevel="3">
      <Chaines>
        <Chain Template="#(SwitchCases)">
          <Properties>
            <Property Name="Items" Value="#(SwitchCases.InputSwitchParams)"/>
          </Properties>
        </Chain>
      </Chaines>
      <Properties>
        <Property Name="Items"/>
      </Properties>
    </Optional>
  </Data>
  <Data Name="Switch" Content="#(Condition)" ChildBlocks="#(SwitchItems.Items)">
    <Realizations>
      <Realization Template="#(!w)switch#(*s)#(Condition)#(*s)#(SwitchItems)"/>
    </Realizations>
  </Data>
  <Data Name="If" Content="#(Condition)?" TrueBlock="#(YesBody.Output)" FalseBlock="#(NoBody.Output)">
    <Realizations>
      <Realization Template="#(!w)if#(*s)#(Condition)#(*s)#(YesBody)#(*s)#(NoBody)"/>
      <Realization Template="#(InOutProperty)?#(*s)#(IfTrueBlockText)#(*s)#(BlockTextBody)"
                   Content="#(InOutProperty)?" TrueBlock="#(IfTrueBlockText.InOutProperty)" FalseBlock="#(BlockTextBody)"/>
    </Realizations> 
  </Data>
  <Data Name="Function" BlockName="#(Name)" Content="#(FuncInput.FuncBody.Output.Name)" ChildBlocks="#(CycleBody)" EndBlockContent="">
    <Realizations>
      <Realization Template="#(!w)#(Type)#(!w)#(Name)#(*s)#(FuncInput)#(*s)#(CycleBody)"/>
    </Realizations>
  </Data>
  <Data Name="Return" Content="#(Name)">
    <Realizations>
      <Realization Template="#(!w)return#(*s)#(Name);"/>
      <Realization Template="#(!w)return#(*s);" Content=""/>
    </Realizations>
  </Data>
  <Data Name="Cycle" Content="#(Condition)" ChildBlocks="#(YesBody.Output)">
    <Realizations>
      <Realization Template="#(!w)while#(*s)#(Condition)#(*s)#(YesBody)"/>
    </Realizations>
  </Data>
  <Data Name="PostCycle" Content="#(Condition)" ChildBlocks="#(YesBody.Output)">
    <Realizations>
      <Realization Template="#(!w)do#(*s)#(YesBody)#(*s)while#(*s)#(Condition)#(*s)"/>
    </Realizations>
  </Data>
  <Data Name="ForCycle" Content="#(Condition)" ChildBlocks="#(YesBody.Output)">
    <Realizations>
      <Realization Template="#(!w)for#(*s)#(Condition)#(*s)#(YesBody)"/>
    </Realizations>
  </Data>
  <Data Name="Operation" Content="#(BlockTextOperation)">
    <Realizations>
      <Realization Template="#(BlockTextOperation)"/>
    </Realizations>
  </Data>
  <Data Name="Method" BlockName="#(Condition)" Content="#(Name)" EndBlockContent="#(MethodOutputBody)">
    <Realizations>
      <Realization Template="#(!w)#(MethodOutputBody)#(!w)#(Name)#(*s)#(Condition)#(*s);"/>
    </Realizations>
  </Data>
  <Data Name="Input" Content="#(InputToWord.InputParams.InOutProperty)">
    <Realizations>
      <Realization Template="#(!w)std::cin#(*s)&gt;&gt;#(InputToWord)"/>
      <Realization Template="#(!w)cin#(*s)&gt;&gt;#(InputToWord)"/>
    </Realizations>
  </Data>
  <Data Name="Output" Content="#(OutputToWord.OutputParams.InOutProperty)">
    <Realizations>
      <Realization Template="#(!w)cout#(*s)&lt;&lt;#(OutputToWord)"/>
      <Realization Template="#(!w)std::cout#(*s)&lt;&lt;#(OutputToWord)"/>
    </Realizations>
  </Data>
</Dates>
